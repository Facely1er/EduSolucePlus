 # Netlify configuration for production deployment
[build]
  command = "npm run build"
  publish = "dist"

# Configure secrets scanning to allow Supabase public keys
[build.environment]
  SECRETS_SCAN_OMIT_KEYS = "VITE_SUPABASE_ANON_KEY,VITE_SUPABASE_URL"

# Security headers for production
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-Content-Type-Options = "nosniff"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "camera=(), microphone=(), geolocation=()"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains"
    Content-Language = "fr"
    X-Served-From = "Africa"

# Content Security Policy (adjust as needed)
[[headers]]
  for = "/*.html"
  [headers.values]
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: https://images.pexels.com https://ui-avatars.com; connect-src 'self' https://*.supabase.co https://www.artci.ci; frame-ancestors 'none'"
    Content-Language = "fr-CI"

# Cache static assets
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# API rate limiting and security
[[headers]]
  for = "/api/*"
  [headers.values]
    X-RateLimit-Limit = "100"
    X-RateLimit-Window = "60"

# Redirect rules for SPA
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# API redirects - Configure if using external API
# [[redirects]]
#   from = "/api/*"
#   to = "https://your-api-domain.com/api/:splat"
#   status = 200
#   force = true

# Environment variables (set in Netlify UI)
[context.production]
  environment = { NODE_ENV = "production" }

[context.deploy-preview]
  environment = { NODE_ENV = "preview" }

[context.branch-deploy]
  environment = { NODE_ENV = "development" }